{
  "swagger": "2.0",
  "info": {
    "title": "myhome-backend",
    "description": "Aplicación para Desarrollo de Aplicaciones 1 - Only in vercel",
    "version": "1.0.0"
  },
  "host": "myhome-backend.vercel.app",
  "basePath": "/api/v1/",
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Health API"
        ],
        "description": "API status",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "Health API"
        ],
        "description": "API dependency status",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/properties": {
      "post": {
        "tags": [
          "Properties"
        ],
        "description": "Create a property",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "example": "Una descripción detallada de la propiedad."
                },
                "associatedRealEstate": {
                  "type": "string",
                  "example": "email@inmobiliaria.com (se obtiene del usuario logueado con rol business)"
                },
                "address": {
                  "type": "object",
                  "properties": {
                    "street": {
                      "type": "string",
                      "example": "Calle Falsa"
                    },
                    "number": {
                      "type": "number",
                      "example": 123
                    },
                    "floor": {
                      "type": "number",
                      "example": 4
                    },
                    "department": {
                      "type": "string",
                      "example": "A"
                    },
                    "district": {
                      "type": "string",
                      "example": "Distrito Central"
                    },
                    "town": {
                      "type": "string",
                      "example": "Ciudad Gótica"
                    },
                    "province": {
                      "type": "string",
                      "example": "Provincia"
                    },
                    "country": {
                      "type": "string",
                      "example": "País"
                    }
                  }
                },
                "geolocation": {
                  "type": "object",
                  "properties": {
                    "latitude": {
                      "type": "string",
                      "example": "-34.603722"
                    },
                    "longitude": {
                      "type": "string",
                      "example": "-58.381592"
                    }
                  }
                },
                "rooms": {
                  "type": "number",
                  "example": 5
                },
                "bedrooms": {
                  "type": "number",
                  "example": 3
                },
                "bathrooms": {
                  "type": "number",
                  "example": 2
                },
                "hasTerrace": {
                  "type": "boolean",
                  "example": true
                },
                "hasBalcony": {
                  "type": "boolean",
                  "example": false
                },
                "garage": {
                  "type": "number",
                  "example": 1
                },
                "hasStorageRoom": {
                  "type": "boolean",
                  "example": true
                },
                "age": {
                  "type": "number",
                  "example": 20
                },
                "propertyType": {
                  "type": "string",
                  "enum": [
                    "casa",
                    "ph",
                    "departamento",
                    "local",
                    "oficina",
                    "galpon",
                    "terreno"
                  ]
                },
                "squareMeters": {
                  "type": "object",
                  "properties": {
                    "covered": {
                      "type": "number",
                      "example": 100
                    },
                    "semiCovered": {
                      "type": "number",
                      "example": 50
                    },
                    "uncovered": {
                      "type": "number",
                      "example": 30
                    }
                  }
                },
                "frontOrBack": {
                  "type": "string",
                  "enum": [
                    "frente",
                    "contrafrente"
                  ]
                },
                "orientation": {
                  "type": "string",
                  "enum": [
                    "norte",
                    "sur",
                    "este",
                    "oeste"
                  ]
                },
                "amenities": {
                  "type": "string",
                  "enum": [
                    "quincho",
                    "pileta",
                    "jacuzzi",
                    "sauna",
                    "SUM",
                    "sala de juegos"
                  ]
                },
                "photos": {
                  "type": "array",
                  "example": [
                    "http://example.com/photo1.jpg",
                    "http://example.com/photo2.jpg"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "video": {
                  "type": "string",
                  "example": "http://example.com/videotour.mp4"
                },
                "price": {
                  "type": "number",
                  "example": 250000
                },
                "expensesPrice": {
                  "type": "number",
                  "example": 5000
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "en alquiler",
                    "en venta",
                    "reservada",
                    "alquilada",
                    "vendida"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Properties"
        ],
        "description": "Obtain a property with parameters",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "latitude",
            "in": "query",
            "description": "Latitude to filter properties.",
            "required": false,
            "type": "number"
          },
          {
            "name": "longitude",
            "in": "query",
            "description": "Longitude to filter properties.",
            "required": false,
            "type": "number"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Filter by property characteristics.",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/properties/appointments": {
      "post": {
        "tags": [
          "Properties"
        ],
        "description": "Create a appointment",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Appointment to create",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "example": "value"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Properties"
        ],
        "description": "Get appointments for a property",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "PropertyID",
            "in": "query",
            "description": "Property ID.",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/properties/{id}": {
      "put": {
        "tags": [
          "Properties"
        ],
        "description": "Update a property",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "number",
            "description": "Property ID."
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Fields to update.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "example": "value"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "tags": [
          "Properties"
        ],
        "description": "Update a field for a property",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "number",
            "description": "Property ID."
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Field to update.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "example": "value"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Properties"
        ],
        "description": "Delete a property",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "number",
            "description": "Property ID."
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth API.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/real-state-companies": {
      "post": {
        "tags": [
          "Real State Companies"
        ],
        "description": "Create a Real State Company",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "fantasyName": {
                  "type": "string",
                  "example": "Argento"
                },
                "email": {
                  "type": "string",
                  "example": "review@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": ""
                },
                "contactEmail": {
                  "type": "string",
                  "example": "review@gmail.com"
                },
                "role": {
                  "type": "string",
                  "example": "business"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "get": {
        "tags": [
          "Real State Companies"
        ],
        "description": "Obtain a real state company with ID.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Real State Company ID.",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/real-state-companies/properties": {
      "get": {
        "tags": [
          "Real State Companies"
        ],
        "description": "Obtain properties for a real state company.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Real State Company ID for get own properties.",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/real-state-companies/properties/appointments": {
      "get": {
        "tags": [
          "Real State Companies"
        ],
        "description": "Get appointments for a real state company.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "RealStateID",
            "in": "query",
            "description": "Real State Company ID.",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/real-state-companies/{id}": {
      "put": {
        "tags": [
          "Real State Companies"
        ],
        "description": "Update a real estate company",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "number",
            "description": "Real State Company ID."
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Fields to update.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "example": "value"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "tags": [
          "Real State Companies"
        ],
        "description": "Update a field for a real estate company",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "number",
            "description": "Real State Company ID."
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Field to update.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "example": "value"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Real State Companies"
        ],
        "description": "Delete a real estate company",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "number",
            "description": "Real State Company ID."
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth API.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Create a user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "example": "Pepe"
                },
                "lastName": {
                  "type": "string",
                  "example": "Argento"
                },
                "email": {
                  "type": "string",
                  "example": "review@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": ""
                },
                "role": {
                  "type": "string",
                  "example": "client"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Get user information by email (login).",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "description": "email to get user information",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auths": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "User login",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "review@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": ""
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "description": "Logout user",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth API.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/properties": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Obtain favorite properties for a user.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "User ID for get favorite properties.",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/{id}": {
      "put": {
        "tags": [
          "Users"
        ],
        "description": "Update a user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "number",
            "description": "User ID."
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Fields to update.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "example": "value"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "description": "Update a field for a user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "number",
            "description": "User ID."
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Field to update.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "example": "value"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "description": "Delete a user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "number",
            "description": "User ID."
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth API.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/{id}/reset-password": {
      "patch": {
        "tags": [
          "Users"
        ],
        "description": "Reset password with token",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string",
                  "example": "my-new-password"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    }
  }
}